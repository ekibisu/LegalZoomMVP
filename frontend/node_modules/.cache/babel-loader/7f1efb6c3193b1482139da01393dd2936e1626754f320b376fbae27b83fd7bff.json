{"ast":null,"code":"// Moved from src/api.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://localhost:52740/api';\nclass ApiClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const token = localStorage.getItem('token');\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && {\n          Authorization: `Bearer ${token}`\n        }),\n        ...options.headers\n      },\n      ...options\n    };\n    if (options.body && typeof options.body === 'object') {\n      config.body = JSON.stringify(options.body);\n    }\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({\n        message: 'An error occurred'\n      }));\n      throw new Error(error.message || `HTTP ${response.status}`);\n    }\n    return response.json().catch(() => null);\n  }\n  get(endpoint, options = {}) {\n    return this.request(endpoint, {\n      method: 'GET',\n      ...options\n    });\n  }\n  post(endpoint, body, options = {}) {\n    return this.request(endpoint, {\n      method: 'POST',\n      body,\n      ...options\n    });\n  }\n  put(endpoint, body, options = {}) {\n    return this.request(endpoint, {\n      method: 'PUT',\n      body,\n      ...options\n    });\n  }\n  delete(endpoint, options = {}) {\n    return this.request(endpoint, {\n      method: 'DELETE',\n      ...options\n    });\n  }\n}\nconst apiClient = new ApiClient(API_BASE_URL);\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => apiClient.post('/auth/login', {\n    email,\n    password\n  }),\n  register: (email, password, firstName, lastName) => apiClient.post('/auth/register', {\n    email,\n    password,\n    firstName,\n    lastName\n  }),\n  getProfile: () => apiClient.get('/auth/profile'),\n  updateProfile: updates => apiClient.put('/auth/profile', updates)\n};\n\n// Placeholder for payment API\nexport const paymentAPI = {\n  getPayments: () => Promise.resolve([]),\n  makePayment: details => Promise.resolve({\n    success: true\n  }),\n  getPaymentHistory: () => Promise.resolve([]) // Placeholder for dashboard\n};\n\n// Placeholder for forms API\nexport const formsAPI = {\n  getForms: () => Promise.resolve([]),\n  createForm: form => Promise.resolve({\n    success: true\n  }),\n  getUserForms: () => Promise.resolve([]) // Placeholder for dashboard\n};\n\n// Add other API modules as needed\n// Advocate/Lawyer API\nexport const advocateAPI = {\n  getProfile: () => apiClient.get('/advocate/profile'),\n  updateProfile: updates => apiClient.put('/advocate/profile', updates),\n  getCases: () => apiClient.get('/advocate/cases'),\n  addCase: caseData => apiClient.post('/advocate/cases', caseData)\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiClient","constructor","baseURL","request","endpoint","options","url","token","localStorage","getItem","config","headers","Authorization","body","JSON","stringify","response","fetch","ok","error","json","catch","message","Error","status","get","method","post","put","delete","apiClient","authAPI","login","email","password","register","firstName","lastName","getProfile","updateProfile","updates","paymentAPI","getPayments","Promise","resolve","makePayment","details","success","getPaymentHistory","formsAPI","getForms","createForm","form","getUserForms","advocateAPI","getCases","addCase","caseData"],"sources":["C:/workspaces/LegalZoomMVP/frontend/src/services/api.js"],"sourcesContent":["// Moved from src/api.js\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://localhost:52740/api';\r\n\r\nclass ApiClient {\r\n  constructor(baseURL) {\r\n    this.baseURL = baseURL;\r\n  }\r\n\r\n  async request(endpoint, options = {}) {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    const token = localStorage.getItem('token');\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...(token && { Authorization: `Bearer ${token}` }),\r\n        ...options.headers\r\n      },\r\n      ...options\r\n    };\r\n\r\n    if (options.body && typeof options.body === 'object') {\r\n      config.body = JSON.stringify(options.body);\r\n    }\r\n\r\n    const response = await fetch(url, config);\r\n\r\n    if (!response.ok) {\r\n      const error = await response.json().catch(() => ({ message: 'An error occurred' }));\r\n      throw new Error(error.message || `HTTP ${response.status}`);\r\n    }\r\n\r\n    return response.json().catch(() => null);\r\n  }\r\n\r\n  get(endpoint, options = {}) {\r\n    return this.request(endpoint, { method: 'GET', ...options });\r\n  }\r\n\r\n  post(endpoint, body, options = {}) {\r\n    return this.request(endpoint, { method: 'POST', body, ...options });\r\n  }\r\n\r\n  put(endpoint, body, options = {}) {\r\n    return this.request(endpoint, { method: 'PUT', body, ...options });\r\n  }\r\n\r\n  delete(endpoint, options = {}) {\r\n    return this.request(endpoint, { method: 'DELETE', ...options });\r\n  }\r\n}\r\n\r\nconst apiClient = new ApiClient(API_BASE_URL);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (email, password) => apiClient.post('/auth/login', { email, password }),\r\n  register: (email, password, firstName, lastName) => \r\n    apiClient.post('/auth/register', { email, password, firstName, lastName }),\r\n  getProfile: () => apiClient.get('/auth/profile'),\r\n  updateProfile: (updates) => apiClient.put('/auth/profile', updates)\r\n};\r\n\r\n// Placeholder for payment API\r\nexport const paymentAPI = {\r\n  getPayments: () => Promise.resolve([]),\r\n  makePayment: (details) => Promise.resolve({ success: true }),\r\n  getPaymentHistory: () => Promise.resolve([]) // Placeholder for dashboard\r\n};\r\n\r\n// Placeholder for forms API\r\nexport const formsAPI = {\r\n  getForms: () => Promise.resolve([]),\r\n  createForm: (form) => Promise.resolve({ success: true }),\r\n  getUserForms: () => Promise.resolve([]) // Placeholder for dashboard\r\n};\r\n\r\n// Add other API modules as needed\r\n// Advocate/Lawyer API\r\nexport const advocateAPI = {\r\n  getProfile: () => apiClient.get('/advocate/profile'),\r\n  updateProfile: (updates) => apiClient.put('/advocate/profile', updates),\r\n  getCases: () => apiClient.get('/advocate/cases'),\r\n  addCase: (caseData) => apiClient.post('/advocate/cases', caseData)\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}